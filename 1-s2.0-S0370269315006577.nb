(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    272834,       5216]
NotebookOptionsPosition[    268251,       5130]
NotebookOutlinePosition[    268643,       5146]
CellTagsIndexPosition[    268600,       5143]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[StyleBox["A novel solution to the Klein\[Dash]Gordon equation \
in the presence of a strong rotating electric field", "Title",
 FontWeight->"Regular",
 FontColor->RGBColor[
  0.2964217593652247, 0.6292210269321736, 0.2727702754253452]]], "Text",
 CellChangeTimes->{{3.822636147120782*^9, 3.822636149053595*^9}, {
   3.822636240732341*^9, 3.82263625191656*^9}, {3.822637212068983*^9, 
   3.822637212721833*^9}, 3.8237615278152447`*^9, {3.832146512264089*^9, 
   3.832146513507378*^9}, 
   3.8762360930657187`*^9},ExpressionUUID->"55e7c0d2-771b-487e-943e-\
70df46dc454b"],

Cell[TextData[{
 StyleBox["E. Raicher, S. Eliezer, A. Zigler, Physics Letters B 750 (2015) 76\
\[Dash]81\nNotebook: \[CapitalOAcute]scar Amaro, November 2022 @", "Section",
  FontSize->24,
  FontColor->GrayLevel[0]],
 StyleBox[ButtonBox[" ",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://epp.ist.utl.pt/"], None},
  ButtonNote->"http://epp.ist.utl.pt/"], "Section",
  FontSize->24,
  FontColor->GrayLevel[0]],
 StyleBox[ButtonBox["GoLP-EPP",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://epp.ist.utl.pt/"], None},
  ButtonNote->"http://epp.ist.utl.pt/"], "Section",
  FontSize->24,
  FontVariations->{"Underline"->True},
  FontColor->GrayLevel[0]],
 StyleBox["\nContact: oscar.amaro@tecnico.ulisboa.pt", "Section",
  FontSize->24,
  FontColor->GrayLevel[0]]
}], "Text",
 CellChangeTimes->{{3.8226362283387003`*^9, 3.822636334723393*^9}, 
   3.822636391632341*^9, {3.8226372468331547`*^9, 3.822637246833611*^9}, {
   3.823761573155903*^9, 3.8237615739111023`*^9}, {3.832146444679867*^9, 
   3.8321464496507*^9}, {3.832146486894559*^9, 3.832146520629979*^9}, {
   3.876236025569461*^9, 3.8762360467538843`*^9}, {3.876236101808344*^9, 
   3.876236102300007*^9}},
 FontSize->14,ExpressionUUID->"640d3a68-01eb-405c-b45c-c4624dd81db0"],

Cell[TextData[{
 StyleBox["Introduction", "Section",
  FontSize->24,
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 StyleBox["\nIn this notebook we reproduce some results from the paper. ", 
  "Section",
  FontSize->24,
  FontColor->GrayLevel[0]]
}], "Text",
 CellChangeTimes->{{3.8226362283387003`*^9, 3.822636334723393*^9}, {
  3.822636391632341*^9, 3.8226364148286*^9}, {3.822636632459257*^9, 
  3.82263666754714*^9}, {3.8226367225529222`*^9, 3.822636739164402*^9}, {
  3.8237615773382463`*^9, 3.823761602335499*^9}, {3.832146518032268*^9, 
  3.832146518523243*^9}, {3.875593945207685*^9, 3.8755939532588367`*^9}},
 FontSize->14,ExpressionUUID->"486412fd-4633-4573-b53c-743b53529cc1"],

Cell[CellGroupData[{

Cell["Equation 9: expansion as Fourier series", "Chapter",
 CellChangeTimes->{{3.874869107114417*^9, 
  3.87486911671602*^9}},ExpressionUUID->"67782eca-2649-4cb9-a147-\
8278ee41f1b5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "y", ",", "z", ",", "n", ",", "c2n", ",", "\[Mu]", ",", "\[Lambda]", ",", 
   "q", ",", "eq6"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", "[", "z", "]"}], "=", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{"I", " ", "\[Mu]", " ", "z"}], "]"}], 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"c2n", "[", "n", "]"}], " ", 
      RowBox[{"Exp", "[", 
       RowBox[{"2", "I", " ", "z", " ", "n"}], "]"}]}], ",", "n"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"eq6", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"y", "[", "z", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"z", ",", "2"}], "}"}]}], "]"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Lambda]", "-", 
       RowBox[{"2", "q", " ", 
        FractionBox[
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"I", " ", "2", "z"}], "]"}], "+", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "I"}], " ", "2", "z"}], "]"}]}], "2"]}]}], ")"}], 
     RowBox[{"y", "[", "z", "]"}]}]}], "//", "FullSimplify"}]}]}], "Input",
 CellChangeTimes->{{3.8748691243136997`*^9, 3.87486920877402*^9}, 
   3.874869311715707*^9, {3.874869363032488*^9, 3.874869363519322*^9}, {
   3.874869456338468*^9, 3.874869456501772*^9}, {3.874869516647313*^9, 
   3.874869517244664*^9}},
 CellLabel->
  "In[436]:=",ExpressionUUID->"e49482c9-9e97-43b0-8aa3-27dbbc67f06f"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"\[ImaginaryI]", " ", "z", " ", "\[Mu]"}]], " ", 
  RowBox[{
   UnderscriptBox["\[Sum]", "n"], 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "n", " ", "z"}]], " ", 
    RowBox[{"c2n", "[", "n", "]"}]}]}]}]], "Output",
 CellChangeTimes->{{3.87486916653055*^9, 3.8748692090302563`*^9}, 
   3.8748693124488783`*^9, 3.874869363853879*^9, 3.874869456852491*^9, 
   3.874869517595544*^9},
 CellLabel->
  "Out[437]=",ExpressionUUID->"e7f5d1c7-2cc8-43c2-98bd-afd7fa5aad56"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"\[ImaginaryI]", " ", "z", " ", "\[Mu]"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Lambda]", "-", 
       SuperscriptBox["\[Mu]", "2"], "-", 
       RowBox[{"2", " ", "q", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "z"}], "]"}]}]}], ")"}], " ", 
     RowBox[{
      UnderscriptBox["\[Sum]", "n"], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "n", " ", "z"}]], " ", 
       RowBox[{"c2n", "[", "n", "]"}]}]}]}], "+", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Mu]", " ", 
     RowBox[{
      UnderscriptBox["\[Sum]", "n"], 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "n", " ", "z"}]], " ", "n", 
       " ", 
       RowBox[{"c2n", "[", "n", "]"}]}]}]}], "+", 
    RowBox[{
     UnderscriptBox["\[Sum]", "n"], 
     RowBox[{
      RowBox[{"-", "4"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "n", " ", "z"}]], " ", 
      SuperscriptBox["n", "2"], " ", 
      RowBox[{"c2n", "[", "n", "]"}]}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.87486916653055*^9, 3.8748692090302563`*^9}, 
   3.8748693124488783`*^9, 3.874869363853879*^9, 3.874869456852491*^9, 
   3.874869521307763*^9},
 CellLabel->
  "Out[438]=",ExpressionUUID->"ac874954-7d1c-4fcb-b7bd-462c3bcd49a6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Solve", "[", "eq6", "]"}]], "Input",
 CellChangeTimes->{{3.8748693231064053`*^9, 
  3.874869325770255*^9}},ExpressionUUID->"cb3be649-c5e3-4e8a-a4aa-\
7287cdf3d7e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Equation 19: solving analytically 1st order equation", "Chapter",
 CellChangeTimes->{{3.8748677626533012`*^9, 3.874867764533333*^9}, {
  3.874867820046884*^9, 
  3.874867830025709*^9}},ExpressionUUID->"6cd3b410-3e13-4b25-9954-\
2ba6286f8b0c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"\[Lambda]", ",", "y", ",", "z", ",", "q"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "z", "]"}], "+", 
       RowBox[{"I", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Sqrt", "[", "\[Lambda]", "]"}], "-", 
          RowBox[{
           FractionBox["q", 
            RowBox[{"Sqrt", "[", "\[Lambda]", "]"}]], 
           RowBox[{"Cos", "[", 
            RowBox[{"2", "z"}], "]"}]}]}], ")"}], 
        RowBox[{"y", "[", "z", "]"}]}]}], "==", "0"}], "}"}], ",", 
    RowBox[{"y", "[", "z", "]"}], ",", "z"}], "]"}], "//", 
  "Simplify"}]}], "Input",
 CellChangeTimes->{{3.874867626517261*^9, 3.874867715425907*^9}},
 CellLabel->
  "In[249]:=",ExpressionUUID->"931f638c-614e-4882-842c-76a6c4ea4bfb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "z", "]"}], "\[Rule]", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"z", " ", "\[Lambda]"}], "-", 
           RowBox[{"q", " ", 
            RowBox[{"Cos", "[", "z", "]"}], " ", 
            RowBox[{"Sin", "[", "z", "]"}]}]}], ")"}]}], 
        SqrtBox["\[Lambda]"]]}]], " ", 
     TemplateBox[{"1"},
      "C"]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.874867680045617*^9, 3.874867709102955*^9}, 
   3.874867766096788*^9},
 CellLabel->
  "Out[250]=",ExpressionUUID->"f94222fc-5870-4b63-ba55-4077a2ce65f3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Equation 22: Bessel function expansion", "Chapter",
 CellChangeTimes->{{3.8748677626533012`*^9, 3.874867764533333*^9}, {
  3.874867811177162*^9, 3.87486781170261*^9}, {3.8748678417526283`*^9, 
  3.874867846526162*^9}},ExpressionUUID->"6cff8367-c49d-4468-970b-\
89b48e6e5488"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"first", " ", 
    RowBox[{
     RowBox[{"maximum", " ", "@", " ", "X"}], "~", "n"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"n", ",", "X", ",", "root"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"root", "[", "n_", "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"FindMaximum", "[", 
        RowBox[{
         RowBox[{"BesselJ", "[", 
          RowBox[{"n", ",", "X"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"X", ",", 
           RowBox[{"0.9", "n"}]}], "}"}]}], "]"}], "//", "Quiet"}], ")"}], 
     "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "1", ",", "2"}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"n", ",", 
           RowBox[{"root", "[", "n", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "5", ",", "200", ",", "10"}], "}"}]}], "]"}], ",", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"n", ",", "n"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "5", ",", "200", ",", "10"}], "}"}]}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<n\>\"", ",", "\"\<X @ Jn[X]=0 ~ n + (O(n^(1/3)))\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Default", ",", "Dashed"}], "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.874868343745377*^9, 3.8748687730025997`*^9}, 
   3.8748688167704563`*^9},
 CellLabel->
  "In[392]:=",ExpressionUUID->"5b921f0a-a783-44b3-af18-cfa270fbeb9d"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEiDgXip8Kmr5R0gPD1HB4nB78wZjWE8i0dFLon
MSokW0P4DY4OXTdfvzS/6gTluzlsqe//8e2lL5Tv7bC3hb3xAzeU7xDg8NbR
+4ieYCCEfyDI4eChjVq+s4Oh8qEON6bUW/erhEHlwx3O5DvPkVsbAZWPcuBl
1VokaRoNlY9xWKB5RX76nliofLyDZM2cpCuKCRD+gwSH1Lba9fr5yRC+QpJD
pumh13ErkiD8hGQH7i1hr7NeQ+UXpDjYfmdRDtNLhepPdShLKDmzYWkGVH+6
g7Zo2fZrm9Oh+jMc3ktMNin8luEAAOESWvI=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEiDqi0HhptiUo3OKLRbmi0NyrtEIBKHwhCpR1C
UekD4ai0QxQqfSAGlXaIR6UfJKDSCkmodEIyKr0gBZV+kIpKK6Sj0gkZcBoA
AAQo3A==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"X @ Jn[X]=0 ~ n + (O(n^(1/3)))\"", TraditionalForm], None}, {
     FormBox["\"n\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 195.}, {0, 199.70131901483498`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8748683521547127`*^9, 3.87486836487978*^9}, {
   3.8748684117965927`*^9, 3.8748684339589787`*^9}, {3.874868472023201*^9, 
   3.8748685037263327`*^9}, {3.874868538280649*^9, 3.874868582123557*^9}, {
   3.874868652179881*^9, 3.8748686914336433`*^9}, {3.874868738281054*^9, 
   3.874868773774227*^9}, 3.874868817409027*^9},
 CellLabel->
  "Out[394]=",ExpressionUUID->"0a606e66-48a3-4057-998f-586a78818637"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"n", ",", "X", ",", "tanh\[Alpha]"}], "]"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"BesselJ", "[", 
       RowBox[{"10", ",", "X"}], "]"}], ",", 
      RowBox[{"BesselJ", "[", 
       RowBox[{"15", ",", "X"}], "]"}], ",", 
      RowBox[{"BesselJ", "[", 
       RowBox[{"20", ",", "X"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"X", ",", "0", ",", "40"}], "}"}], ",", 
    RowBox[{"PlotPoints", "\[Rule]", "2"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<X\>\"", ",", "\"\<Jn(X)\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<n=10\>\"", ",", "\"\<n=15\>\"", ",", "\"\<n=20\>\""}], 
      "}"}]}]}], "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tanh\[Alpha]", "=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"1", "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"X", "/", "n"}], ")"}], "^", "2"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"LogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"BesselJ", "[", 
      RowBox[{"n", ",", "X"}], "]"}], ",", 
     RowBox[{
      FractionBox["tanh\[Alpha]", 
       RowBox[{"\[Pi]", " ", 
        RowBox[{"\[Sqrt]", "3"}]}]], 
      RowBox[{"BesselK", "[", 
       RowBox[{
        RowBox[{"1", "/", "3"}], ",", 
        RowBox[{
         FractionBox["1", "3"], "n", " ", 
         RowBox[{"tanh\[Alpha]", "^", "3"}]}]}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"n", 
        RowBox[{"(", 
         RowBox[{"tanh\[Alpha]", "+", 
          RowBox[{
           FractionBox["1", "3"], 
           RowBox[{"tanh\[Alpha]", "^", "3"}]}], "-", 
          RowBox[{"ArcTanh", "[", "tanh\[Alpha]", "]"}]}], ")"}]}], "]"}]}]}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"X", ",", 
     RowBox[{"0.8", "n"}], ",", "n"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Default", ",", "Dashed"}], "}"}]}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "2"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<X\>\"", ",", "\"\<Jn(X)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<BesselJ[n,X]\>\"", ",", "\"\<eq 22\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<n=100\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.874867847698791*^9, 3.87486797552311*^9}, {
  3.8748682006766033`*^9, 3.874868215108305*^9}, {3.874868257094342*^9, 
  3.874868268597801*^9}, {3.8748683148395653`*^9, 3.874868327487461*^9}, {
  3.874868793945415*^9, 3.874868844673942*^9}, {3.8762361435378523`*^9, 
  3.8762362219642487`*^9}, {3.8762471387798862`*^9, 3.87624727376472*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"2993855a-a488-4b16-8d7a-d3a12c2806f5"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwtz3801Xccx/HPvRNy/Dgu2axbl0KHm5/X7x/38773Wlna2bB0p4Vsmlp3
iE451+WaRfJzFY6xaJQxbWEVl3wuV5QkMpHL/AiVbYqVX+18v1vT+5zXef/7
fJhHRAdGMhFCgv/2+j+PenTq6rIGfmm2uG/X7j7n2KNEFICmsK+qa8emkJM+
1eEfB25DL/DinuEs6S0LPlv7NtMKUTid14Dcn6TwOwfPf8JCGvD92aA6t+o2
vpz7sNYQrQfVD5zUIe0XfPdkIx1DpA+3Z/JsWg3Y+MRTK0dtuSFocG0lp018
8B4j31EtZAyLq++GNOuKsZPPgQwtuQmom8sex5XHYP0vkly0kClcmEnxz5hO
xbN5xROa8o3QxHY8taiVjzsUDdmaaDNU6UTsr18qx4ELs+y3wAyi3pc+i/Co
xZC+ssCUm4OZUrfxhmsTtnsNUG6BDy6l6XC6VJhda1LKRBaAjPrbX+Z0YZ0d
lseYYAkd+8RaO2N68fIwz58ptwJWUrNMu+4+nokWmjOV20C4d9n9jLgfD2gE
LDGQNdxd13BZ42Efbi8Ku8sAGzgyMq/6TLsb19l9Vc6QcyEzX0/WGKzEZarE
BIZyO9RwRl3TZWdwjjjzQwayg7LF71h6BteJ7K8iSwbYQ3BRQUpKaAdxFfwm
Q+AAVe+cDTzUc4dczlRHoXEH8KoM09XN6iIWDyaDkNwRFLabfQfG2kix2Swf
mTmBafwgK0xdTVhfzlsjpRM4W0ozC4x+whlXl41ROA/8l6x/5qy2YvT/OYMq
lDKq+r0TH9+l9Qdd6gyK7IRO9kgHnjun/4DGLpDJGzxRUtGCI8c2tNJjLvA4
sQhoUQkesd5UQye7QlNMxBz5s5YExVsU0hw3uKZrNZ4b1Ua6Wrhf08QNpgNk
SdavbhLhep6EDnOHBGlcUXBNG2kM8hTTtDv0xdhUGeF64nBeIKJLPeDQxSb9
g+pv8Y9P/Oxo7AkDF4y9VrkKzOF9ZEqPeQKTW5GvL1XhAtleDTrZC/z+dp5m
SVRY71boM4rjDWovhtOCiQJ/wzo4TBFvWCc9KbzkcQ6/+lRykwrzAfPufGaF
fS05Whl/haJ9wI8bNdlWqiSz89JiqpQPG49vWIHnbeSAd2oahTF0pcR+Lvz1
BhlKOx1LjWHYzZ1XHN5fSdb6ABa2H9ZMnSjHU9ndW+lcgJDRAqVle9ObXgBF
cUXjzketOGSoX5+2FwDn2Ns9WeHkTb8AcuISqR7fK/j+FvUKdU8AhZoNppOK
PLLmEcKoz7jvxf5rxE8yOUVFC4HlOn5EWaIkaz4hVLyXE2kyQYjy+tN7lIEI
EqOz/8mX1JM1rwi25szN4DgxcWXOK6hfRNCbEG5bKKvDa34ROPXW29zJbcH/
Ag+14Rw=
          "]]}, Annotation[#, "Charting`Private`Tag$13016#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwtz3lQlHUYwPHfrisrJIscyhHKIYdALggsEC7v71k2GqTAOJJjSg7Dgzhk
UQ4TWVABYQwS45A4Jim3hASGc1PeXRABAySQOw6NIUDk0hTC3jdNnplnnv+e
+X4MQqK8QpkIIcHrfXOXjv+ZXrvKwufHuydZvu3caBEp9ERTOG1PdIXJvcH9
Pwf5eJmi5/gfyxotuU8bX3dLB9MEUbhBesXlqr+3U9tgsb8aYkFY+PYreuW1
TmKL4SpVpAgJsz+GWtsxCYckdSVVxIEDi64L10KAiJ812bdFrArlntIjXI0Y
4lP1D8bYSANYIt3JBq1Swtop+BJbvAOMb+Wk3TFvJTjHzvHYSBtCujw1in+b
JuayCx8piN+FlNL0X/P6WPietOGyAtoFxXUZaClbH3utzOluAn2gOMRYX6g9
hrS1FabYAJKvUTdF7e6Y+wYgM4SF3Yu8FddgrFu1o4SJjGDu4KN6lTgRVvrQ
+DQTjMGDKJvpPpCCV0dsPmKKTUAzILdDZyobT0c5GzBlpvDFvHnZCcci3M/y
fMlAZvAiPJ0R2XoD3y0I7GKAOSxmjdf8ZV+Nq7mR1xliC8iz+LyRCpDi0paz
CQzZezB8M8w8EDXjr/0yDzIQFx4KD7up8tpw4tMCYwZYQiZLIfT7vZ3YTvAw
EYEVsG3YI8pbe3BF5uhxNGkFy/J5dv7m37HRwGNvJN4Hz4uajJ4V9OBC/TkC
6VuDp1kHYavchdW+XDZDMmug86riGd+24ku1qxooyAbMetYyKsbqMPp/bCE6
3J9l8J0bGefGfkKX2MLHeXyJy9k6cuEqZ4DGPFA690NR3ua7ZOjEdjk9wQPT
Xd5+E9J28g+zneV0kh0g2tNiwLed9D5llEfr2UPVO9s8Xo00k/ebLFJo0h7U
X/RIzO9Xk86KNhF0oAMs+UxePLM1Czd6O/rRtAOkuZ5cWFBsxFbFAiFd8j64
h3WbXu9swZIZVy6NHUErIjA9f70V69l8ok1POILEwNk8MLUZ5yb6suik/ZAa
/ku/qLwGK7cfXqT0+PBq7GhMQ+4J8oLa0RGK5INO/nynyze15PpnEa1UoBMw
9hrmDK3JSdGNU5UU7QSTfHdilm4h55a/KqRKCJBN1icPesnIYP75VApj0BQM
ER6aleRQakY0NYFhW+x6nMQyZ6MPIOnYKHd4tB5PXe7cTWcB8M7E3uHclm/0
AujE7nlqurMZBwz1cWhLAahkKQclb5Ju9Avg5RPD+J+0S3Gv4ega9UDw+h+f
q20gId96nKGMd8SpQOM26RrxeIqKcoaWQwkxvRflGz5neOZzKCV6vImU1c8+
oFSEcHI6idHwb+WGVwghf4vG+zPF2I65LKVuCUE+4z0TaVqD3/qFgHnLvczT
JP4P0Gnc1w==
          "]]}, Annotation[#, "Charting`Private`Tag$13016#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwtz3tUk3Ucx/Fna4HCccQEPAQICJMIHDdB2O333UYGQ+RmCsFpoJkIcTM0
OTBYTrl5CCTMg0sGUkCkBQvEUfps3G8BoYKABQ6yiScRiltynqcLfM/5nO+/
75f90ZTw41QMw+Df/fdfxM/kN6/SkKMcJ6fyr76RdgoXhWGzyMDQhgjMpLHr
Yw+FO2F/Iav98poDbv6c7rGKKAZGgxO3fw1Vmcm5MpfxRlNsK4ifvT9h1q/n
+uZsNzLF6OBy+eWSlw+Xd/bpbo8tMlOIeqvYQW95jvfOdv9fDDEzyBD1yRvP
3OV58uIKDGUWYCLVlbjmLfLoJ7K9DTFLKKsIOpIab8+fK1E8NpBZAatmVJIr
FfO7Wm8XGWA7IXHZTaN/ksoPX5yzfgXsoFvbrOeVlvIhb22RKrOHfvO+Y9T5
Rj7LeksvVbMLtBkn0x/ND/KtGy2UVMwRZskmdTxTzzfazzxNBSboDodIn3Mo
aHXCK4gq2w3A0UcnNlqgJylCe6rGCfaMf2mz1OaCHtDCViiYM7xuXpBP3EGo
o1zyEwXehOrlb/PrjcOQipVcTZG5QN2N5LBa/zhU2Z6VQdG4QuFkgAejOBV9
GnkxhIKxQGL9Yv4BMxtJ/yhnUsANVMaRszKbQuQjuC/FwB2K1hqsDl66jG5e
nIzHpt1hmHHt+hVKFXIc1UVgMg9oihKz71R9jRR2c3zMzhMomVW2X5xVIUbi
gjOm8QT/+LJIyWk1KmheNcNivcBPHuk03qFB2P+3F0Z2sLPTLTrRx2LDZ6Ry
LyQEDjscFPai52X0URJ5Aye/ocW2ZQAdnzLXklPesI0rCaoYHESPnG1ukDk+
8KrV/XWT3wdRRLrjFdJ2HygfexyaPj+A+u66nCPxfWC//M21S2e6kXCrVxIp
8YXoe0G56t9wpI5gR5KkL3R+Zs2wU9Yj9wqBiFT6AenZ8/3Myat4nT6ARSI2
pJWwprNoatzWK9SSnGLD2KK1ojqrHf9ceoRG5nAgsWAsuXe9C9/W8948YcuF
hFTm20RgF36e8cEEgXNhODP4gPGHWvxlTFInIeGBQre4GveJCj9Vm95AkDwI
fW14D737IzS3kKkglHxYocVnBwc2oTiuPJdACCRRdUECoRY9zC1MI6YQmBuL
VUMxHWijD2BnpepHproNzRYNOJDFACvXd9xqT1CjjV6ApZBjM0dpFejdh/fo
pJsA1l3XkyN+rt3sF4B7fdgIZ+0HfGTX5BoxJICbgWTe38Ftmx4hDJrFDJQP
aPGAJN0skSKE9H5t858c9aZPCMRE1q1YZSWuaXk6RJiIQFxjVFDq+BXa8Iog
wk9XMsRtRT7UhVbiOxH0zB++oGBp0YZfBFq1AV0RrUH/AL061/Q=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$13016#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Jn(X)\"", TraditionalForm], None}, {
        FormBox["\"X\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 40}, {-0.21723667652094505`, 0.30228095592007176`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"n=10\"", "\"n=15\"", "\"n=20\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.874868242409746*^9, 3.87486826958778*^9}, {
   3.874868315684291*^9, 3.8748683375766706`*^9}, {3.874868795943015*^9, 
   3.874868845112636*^9}, 3.876236223272531*^9, {3.876247205482535*^9, 
   3.8762472743398314`*^9}},
 CellLabel->"Out[32]=",ExpressionUUID->"0ecdf007-82d7-4354-9690-d69fa3ec911a"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwBEQLu/SFib1JlAgAAACAAAAACAAAAJNbiUwAAVEAgV8HDdpMowHO/Q1EA
FFRA+bcL2mgaKMDCqKROAChUQOY7FoigoifAYHtmSQBQVEAHCef83rYmwJsg
6j4AoFRAvC1ZA4/uJMASa/EpAEBVQGsQR/+YmiHAYVRSJwBUVUBLmzncyjUh
wLA9syQAaFVAgRiXKkHSIMBOEHUfAJBVQFiCvLf8DiDAibX4FADgVUALVaX5
fC8dwAAAAAAAgFZAlZXMR0LOF8BP6WD9/5NWQJXYqDzgLRfAntLB+v+nVkB9
0edvJZAWwDylg/X/z1ZA03+3uLNcFcB3Sgfr/x9XQOGaCSdRFhPAxjNo6P8z
V0AhkdzomIsSwBQdyeX/R1dAuPsTSqsDEsCy74rg/29XQKIzuqVH/BDA7pQO
1v+/V0DPVgqRNyAOwD1+b9P/01dASoVXn+Y4DcCMZ9DQ/+dXQL388v2gVwzA
KjqSy/8PWEDVIQJLh6cKwHkj88j/I1hAQpOIjt7YCcDIDFTG/zdYQAbi7guY
EAnAZd8Vwf9fWECYO4i3mpMHwLTIdr7/c1hAkWIlZh3fBsACste7/4dYQDWr
MrZ1MQbAoISZtv+vWEBvbTDeNOsEwO9t+rP/w1hA6m1q9+lSBMA+V1ux/9dY
QNO8RuURwgPAjUC8rv/rWED0VALe3DgDwNwpHaz//1hACkEGj3+3AsBAevbd

          "]]}, Annotation[#, "Charting`Private`Tag$13112#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJwBEQLu/SFib1JlAgAAACAAAAACAAAAJNbiUwAAVED8gTSYaZQowHO/Q1EA
FFRAdlWx0VwbKMDCqKROAChUQPqHCKeVoyfAYHtmSQBQVEDvM+V21rcmwJsg
6j4AoFRAlJ7sZYvvJMASa/EpAEBVQIP6wvufmyHAYVRSJwBUVUDmsbs90zYh
wLA9syQAaFVADJWs9ErTIMBOEHUfAJBVQBpLzVwJECDAibX4FADgVUDGkfTt
oTEdwAAAAAAAgFZA4r7Ckn7QF8BP6WD9/5NWQHzAaU0fMBfAntLB+v+nVkCE
2fEzZ5IWwDylg/X/z1ZAMUk2mfpeFcB3Sgfr/x9XQKaCvWagGBPAxjNo6P8z
V0BipZur6Y0SwBQdyeX/R1dAXOsjPf0FEsCy74rg/29XQJqqzMGa/hDA7pQO
1v+/V0AfPr/G0yQOwD1+b9P/01dAcTe+03s9DcCMZ9DQ/+dXQGPP8K4sXAzA
KjqSy/8PWECpAJRh9qsKwHkj88j/I1hAXJ2zOzndCcDIDFTG/zdYQEE/xBfZ
FAnAZd8Vwf9fWED5rAkLlJcHwLTIdr7/c1hAfAr+ZOXiBsACste7/4dYQNmY
xm4ANQbAoISZtv+vWECWNp6rE+4EwO9t+rP/w1hAm4J4EVBVBMA+V1ux/9dY
QBX/mKjdwwPAjUC8rv/rWEBfbA9G3zkDwNwpHaz//1hA+xx7hnC3AsDKQPwd

          "]]}, Annotation[#, "Charting`Private`Tag$13112#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
       None}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     Ticks -> {Automatic, Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
     AxesOrigin -> {80., -12.289868122491491`}, FrameTicks -> {{Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "ClippingRange" -> {{{80.00002, 
        99.99998}, {-12.289868122491491`, -2.339570093757741}}, {{80.00002, 
        99.99998}, {-12.289868122491491`, -2.339570093757741}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {80., -12.289868122491491`}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Jn(X)\"", TraditionalForm], None}, {
        FormBox["\"X\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
       None}, PlotLabel -> FormBox["\"n=100\"", TraditionalForm], 
     PlotRange -> {{80., 100}, {-12.289868122491491`, -2.339570093757741}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"BesselJ[n,X]\"", "\"eq 22\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.874868242409746*^9, 3.87486826958778*^9}, {
   3.874868315684291*^9, 3.8748683375766706`*^9}, {3.874868795943015*^9, 
   3.874868845112636*^9}, 3.876236223272531*^9, {3.876247205482535*^9, 
   3.8762472746753674`*^9}},
 CellLabel->"Out[35]=",ExpressionUUID->"ac277464-4635-478d-a9be-c9dda53fd231"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Equation 24: simple Taylor series", "Chapter",
 CellChangeTimes->{{3.8748677626533012`*^9, 3.874867764533333*^9}, {
  3.874867811177162*^9, 3.87486781170261*^9}, {3.8748678417526283`*^9, 
  3.874867846526162*^9}, {3.874868036033359*^9, 
  3.8748680408291883`*^9}},ExpressionUUID->"16a30def-1239-4ba4-9778-\
7ae4ad622c92"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Alpha]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Tanh", "[", "\[Alpha]", "]"}], "+", 
    RowBox[{
     FractionBox["1", "3"], 
     RowBox[{
      RowBox[{"Tanh", "[", "\[Alpha]", "]"}], "^", "3"}]}], "-", "\[Alpha]"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0", ",", "6"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.874867992734345*^9, 3.87486802693678*^9}},
 CellLabel->
  "In[253]:=",ExpressionUUID->"24fbc382-700c-48ed-af9a-553e870a9107"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["\[Alpha]", "5"], "5"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "\[Alpha]", "]"}], "7"],
    SeriesData[$CellContext`\[Alpha], 0, {}, 5, 7, 1],
    Editable->False]}],
  SeriesData[$CellContext`\[Alpha], 0, {
    Rational[-1, 5]}, 5, 7, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.874868022412359*^9, 3.8748680272535677`*^9}},
 CellLabel->
  "Out[254]=",ExpressionUUID->"2212ff86-0caa-46fa-8a8e-d3d348a62904"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Equation 25: simple K1/3 expansion", "Chapter",
 CellChangeTimes->{{3.8748677626533012`*^9, 3.874867764533333*^9}, {
  3.874867811177162*^9, 3.87486781170261*^9}, {3.8748678417526283`*^9, 
  3.874867846526162*^9}, {3.874868036033359*^9, 3.8748680408291883`*^9}, {
  3.874868089719863*^9, 
  3.874868102441585*^9}},ExpressionUUID->"624aae71-5406-4559-9143-\
d09cddc6787e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "u", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"BesselK", "[", 
    RowBox[{
     RowBox[{"1", "/", "3"}], ",", "u"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"u", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.874868055997724*^9, 3.874868081691766*^9}},
 CellLabel->
  "In[259]:=",ExpressionUUID->"bc5d7c33-78fa-4424-b866-cb355644dc0f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox[
    RowBox[{"Gamma", "[", 
     FractionBox["1", "3"], "]"}], 
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{"2", "/", "3"}]], " ", 
     SuperscriptBox["u", 
      RowBox[{"1", "/", "3"}]]}]], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "u", "]"}], 
     RowBox[{"1", "/", "3"}]],
    SeriesData[$CellContext`u, 0, {}, -1, 1, 3],
    Editable->False]}],
  SeriesData[$CellContext`u, 0, {2^Rational[-2, 3] Gamma[
      Rational[1, 3]]}, -1, 1, 3],
  Editable->False]], "Output",
 CellChangeTimes->{{3.874868076404121*^9, 3.874868081929349*^9}},
 CellLabel->
  "Out[260]=",ExpressionUUID->"0e466c47-25e1-4347-b279-d892c1833285"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Figure 1", "Chapter",
 CellChangeTimes->{{3.8748707185976973`*^9, 3.874870726075122*^9}, {
  3.8762493136200857`*^9, 
  3.8762493146807127`*^9}},ExpressionUUID->"3d1e69db-6d9c-4552-a1a6-\
3643745dd5e3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"figure", " ", "1"}], ":"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "ea", ",", "m", ",", "p0", ",", "pprp", ",", "p", ",", "\[Xi]", ",", 
     "mph", ",", "\[Nu]", ",", "nstar", ",", "pdot\[Epsilon]", ",", "kdotp", 
     ",", "nstar", ",", "nstarV", ",", "\[Nu]", ",", "\[Nu]V"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"\"\<definitions\>\"", " ", "equation", " ", "52"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Delta]", "=", 
     FractionBox[
      RowBox[{
       RowBox[{"\[Sqrt]", "2"}], " ", "ea", " ", "pprp"}], 
      RowBox[{
       RowBox[{"p0", "^", "2"}], "+", 
       RowBox[{"ea", "^", "2"}]}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]", "=", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"(", 
         FractionBox["ea", "p0"], ")"}], "^", "2"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"in", " ", "these", " ", "units"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ea", "=", 
     RowBox[{"20", " ", "m"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"3", "-", 
     RowBox[{"vector", " ", "momentum"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"m", "/", "5"}], ",", 
       RowBox[{"m", "/", "5"}], ",", "0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"0", " ", "component", " ", "in", " ", "4"}], "-", "momentum"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p0", "=", 
     RowBox[{"Refine", "[", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"Norm", "[", "p", "]"}], "^", "2"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"m", ">", "0"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"as", " ", "in", " ", "main", " ", "text"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Delta]", "=", 
     RowBox[{
      RowBox[{"\[Delta]", "/.", 
       RowBox[{"{", 
        RowBox[{"pprp", "->", 
         RowBox[{"Norm", "[", "p", "]"}]}], "}"}]}], "//", "N"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]", "=", 
     RowBox[{"\[CapitalOmega]", "//", "N"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Xi]", "=", "20"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mph", "=", 
     RowBox[{"m", "/", "10"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kdotp", "=", 
     RowBox[{"p0", " ", "mph"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"equation", " ", "51"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pdot\[Epsilon]", "=", 
     RowBox[{
      RowBox[{
       FractionBox["pprp", 
        RowBox[{"\[Sqrt]", "2"}]], "/.", 
       RowBox[{"{", 
        RowBox[{"pprp", "->", 
         RowBox[{"Norm", "[", "p", "]"}]}], "}"}]}], "//", "N"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"eq", " ", "34"}], ":", " ", 
     RowBox[{"new", " ", "analytical", " ", "solution"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nstar", "=", 
     RowBox[{
      FractionBox[
       RowBox[{"ea", " ", "pdot\[Epsilon]"}], 
       RowBox[{"\[CapitalOmega]", " ", "kdotp"}]], "//", "N"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Nu]", "=", 
     RowBox[{
      RowBox[{
       FractionBox["kdotp", 
        SuperscriptBox["mph", "2"]], 
       RowBox[{"(", 
        RowBox[{"\[CapitalOmega]", "-", "1"}], ")"}]}], "//", "N"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nstarV", "=", 
     RowBox[{
      FractionBox[
       RowBox[{"ea", " ", "pdot\[Epsilon]"}], "kdotp"], "//", "N"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Nu]V", "=", 
     RowBox[{
      FractionBox[
       SuperscriptBox["ea", "2"], 
       RowBox[{"2", "kdotp"}]], "//", "N"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", "\"\<parameters for figure 1:\>\"", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<\[Delta]=\>\"", ",", "\[Delta]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<\[CapitalOmega]=\>\"", ",", "\[CapitalOmega]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<\[Nu]=\>\"", ",", "\[Nu]"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<\[Nu]V=\>\"", ",", "\[Nu]V"}], "]"}], "\[IndentingNewLine]", 
   
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"9.5", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]], 
        SuperscriptBox["10", "5"], 
        RowBox[{"Abs", "[", 
         RowBox[{"BesselJ", "[", 
          RowBox[{
           RowBox[{"n", "//", "Abs"}], ",", 
           RowBox[{"2", "nstarV"}]}], "]"}], "]"}]}], ",", 
       RowBox[{"2.25", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]], 
        SuperscriptBox["10", "5"], 
        RowBox[{"Abs", "[", 
         RowBox[{"BesselJ", "[", 
          RowBox[{
           RowBox[{"n", "//", "Abs"}], ",", 
           RowBox[{"2", "nstar"}]}], "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "16"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<n\>\"", ",", "\"\<c2n\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Red"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Volkov\>\"", ",", "\"\<Analytical\>\""}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Fig.1 \!\(\*StyleBox[\"p\",FontWeight->\"Plain\"]\)\!\(\*StyleBox[\
\"=\",FontWeight->\"Plain\"]\)\!\(\*StyleBox[\"(\",FontWeight->\"Plain\"]\)\!\
\(\*StyleBox[\"m\",FontWeight->\"Plain\"]\)\!\(\*StyleBox[\"/\",FontWeight->\"\
Plain\"]\)\!\(\*StyleBox[\"5\",FontWeight->\"Plain\"]\)\!\(\*StyleBox[\",\",\
FontWeight->\"Plain\"]\)\!\(\*StyleBox[\"m\",FontWeight->\"Plain\"]\)\!\(\*\
StyleBox[\"/\",FontWeight->\"Plain\"]\)\!\(\*StyleBox[\"5\",FontWeight->\"\
Plain\"]\)\!\(\*StyleBox[\",\",FontWeight->\"Plain\"]\)\!\(\*StyleBox[\"0\",\
FontWeight->\"Plain\"]\)\!\(\*StyleBox[\")\",FontWeight->\"Plain\"]\)\>\""}]}]\
, "]"}]}]}]], "Input",
 CellChangeTimes->{{3.874869942574526*^9, 3.8748699931246243`*^9}, {
  3.874870076888185*^9, 3.8748701533436527`*^9}, {3.87487021855406*^9, 
  3.874870258710935*^9}, {3.874870376662359*^9, 3.8748704339086018`*^9}, {
  3.874870473569743*^9, 3.874870534827711*^9}, {3.8748705670810347`*^9, 
  3.874870753126835*^9}, {3.87624741284608*^9, 3.876247549630018*^9}, {
  3.876247660484597*^9, 3.876247708157477*^9}, {3.876247767793277*^9, 
  3.876247783995512*^9}, {3.87624782059951*^9, 3.876247899847988*^9}, {
  3.876247931156118*^9, 3.876248001577565*^9}, {3.87624824607397*^9, 
  3.876248313611993*^9}, {3.876248367439065*^9, 3.8762483896979437`*^9}, {
  3.876248427570573*^9, 3.876248451549131*^9}, {3.876248525842567*^9, 
  3.876248537834445*^9}, {3.876248569589209*^9, 3.8762486325490017`*^9}, {
  3.8762490811119833`*^9, 3.8762493010296803`*^9}, {3.87624948983633*^9, 
  3.87624949830042*^9}},
 CellLabel->
  "In[1596]:=",ExpressionUUID->"205a7499-384d-404e-89ff-0a8a35eb715a"],

Cell[CellGroupData[{

Cell[BoxData["\<\"parameters for figure 1:\"\>"], "Print",
 CellChangeTimes->{{3.876248271090378*^9, 3.876248281555891*^9}, 
   3.876248313841889*^9, {3.876248368573826*^9, 3.87624838617391*^9}, 
   3.8762484610008993`*^9, {3.876248528077902*^9, 3.876248538223934*^9}, 
   3.876248572118205*^9, {3.876248610897525*^9, 3.8762486251309566`*^9}, 
   3.8762490981289377`*^9, {3.876249134191885*^9, 3.876249248519524*^9}, {
   3.876249279433173*^9, 3.8762493223713284`*^9}, {3.876249495665354*^9, 
   3.876249498562662*^9}},
 CellLabel->
  "During evaluation of \
In[1596]:=",ExpressionUUID->"17210918-2b8b-4114-ab06-12bcd3d03e7b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[Delta]=\"\>", "\[InvisibleSpace]", "0.01994614540740002`"}],
  SequenceForm["\[Delta]=", 0.01994614540740002],
  Editable->False]], "Print",
 CellChangeTimes->{{3.876248271090378*^9, 3.876248281555891*^9}, 
   3.876248313841889*^9, {3.876248368573826*^9, 3.87624838617391*^9}, 
   3.8762484610008993`*^9, {3.876248528077902*^9, 3.876248538223934*^9}, 
   3.876248572118205*^9, {3.876248610897525*^9, 3.8762486251309566`*^9}, 
   3.8762490981289377`*^9, {3.876249134191885*^9, 3.876249248519524*^9}, {
   3.876249279433173*^9, 3.8762493223713284`*^9}, {3.876249495665354*^9, 
   3.876249498569384*^9}},
 CellLabel->
  "During evaluation of \
In[1596]:=",ExpressionUUID->"bd6f3517-4b8e-40e4-b7de-e2895694f849"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[CapitalOmega]=\"\>", "\[InvisibleSpace]", 
   "19.270972221721724`"}],
  SequenceForm["\[CapitalOmega]=", 19.270972221721724`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.876248271090378*^9, 3.876248281555891*^9}, 
   3.876248313841889*^9, {3.876248368573826*^9, 3.87624838617391*^9}, 
   3.8762484610008993`*^9, {3.876248528077902*^9, 3.876248538223934*^9}, 
   3.876248572118205*^9, {3.876248610897525*^9, 3.8762486251309566`*^9}, 
   3.8762490981289377`*^9, {3.876249134191885*^9, 3.876249248519524*^9}, {
   3.876249279433173*^9, 3.8762493223713284`*^9}, {3.876249495665354*^9, 
   3.8762494985739527`*^9}},
 CellLabel->
  "During evaluation of \
In[1596]:=",ExpressionUUID->"00ad2263-8500-40c0-a6d1-6bb411c28483"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[Nu]=\"\>", "\[InvisibleSpace]", "189.8775131502098`"}],
  SequenceForm["\[Nu]=", 189.8775131502098],
  Editable->False]], "Print",
 CellChangeTimes->{{3.876248271090378*^9, 3.876248281555891*^9}, 
   3.876248313841889*^9, {3.876248368573826*^9, 3.87624838617391*^9}, 
   3.8762484610008993`*^9, {3.876248528077902*^9, 3.876248538223934*^9}, 
   3.876248572118205*^9, {3.876248610897525*^9, 3.8762486251309566`*^9}, 
   3.8762490981289377`*^9, {3.876249134191885*^9, 3.876249248519524*^9}, {
   3.876249279433173*^9, 3.8762493223713284`*^9}, {3.876249495665354*^9, 
   3.8762494985775023`*^9}},
 CellLabel->
  "During evaluation of \
In[1596]:=",ExpressionUUID->"5c039afa-31b0-4fd2-98b8-a4744583442d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[Nu]V=\"\>", "\[InvisibleSpace]", "1924.500897298753`"}],
  SequenceForm["\[Nu]V=", 1924.500897298753],
  Editable->False]], "Print",
 CellChangeTimes->{{3.876248271090378*^9, 3.876248281555891*^9}, 
   3.876248313841889*^9, {3.876248368573826*^9, 3.87624838617391*^9}, 
   3.8762484610008993`*^9, {3.876248528077902*^9, 3.876248538223934*^9}, 
   3.876248572118205*^9, {3.876248610897525*^9, 3.8762486251309566`*^9}, 
   3.8762490981289377`*^9, {3.876249134191885*^9, 3.876249248519524*^9}, {
   3.876249279433173*^9, 3.8762493223713284`*^9}, {3.876249495665354*^9, 
   3.876249498581374*^9}},
 CellLabel->
  "During evaluation of \
In[1596]:=",ExpressionUUID->"1c5796da-e4da-4a8b-81b3-3252fd6cdde8"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
CBD8wqYi9Ls4gg7oGLBOA89+HJSsZRBD/6un504zWyGplePq1WVB3Ahjwjou
Kwg4VO+b+sqPMH7HUT4hK2ye9gl5YseDUZ9W54s0K3z4npu4wMGCCkaJ+c1q
VriYdzUtIn2FiCr1L5XUtUJt7ov8Pf3ThP66Es8fJlboGRnp2LW+n/g3Ochc
aGUF3bQLlX5kNdFZe/kll7MV3p1K/fPrVA9Rl+pyPG6TFR6fGl7d1DFFpCuV
M234zwqp53kGm9azIHrKr+5xuBVYbkU2tm/lgDfJm6gUbYWUrJf3tlrzQsl7
D+NKEn0/549vZGwQArcy9cXONCu0rv8juW9GBJNTnxI+X7SCU8BA0/Y14ugg
E2GVbwXF1/ffa85IoDZNj6H8uhUepo/N27+UwnXv3lrxu1bIvRD9cFu4DFKV
Lx5NemgFX7mSusARWURN2xHjtVaY8RTYqkWjYMuLmRWfeis8l1QRa31EgWV6
6fO3H+n72Sfz9z8Tev3y2XJE7yt9/nzpGZtiul6qcFgWdFtBMjT48TS9vk1M
1yxzDlnhUVvATVEdGjpehD2LnbRCvbdy2E4PGp6nSx3uWbBCVfE2pqYAGkp8
mszXM1ujw/1eq7k7DadVDi/VcFmjMUJqz1ctGvb803yqKGyNCyLDdj8nqfCq
+3nwnLQ1nq9lVrheQIV5RobZsoI1unnjL900oELeF4s7NK3BUPxS/kg1BZyq
E4/bDKwxb0B6fZajYPzf1XhYWuPPxajo2SFZtNdtMr1tb42zUkuOdyNl8DSD
eUFsgzXYX/5t/dAkhSLfqprjm60xWe75O4lNEidVQw6MBVijlbvET5EqDs+X
b+be7LFGZNpvZsdFIZifjXuke8Aa0rwxYTovBEDzU9mff8wahkFlHy5382J0
5tRsTKY1VnadVjHRZUXbS9OH3ZetceeU9yCjNgMenx2OXVdsjZPK+5br9WaI
Qr8rhjW3rBGUlpNuTS98yWrrZhSqrCEgVTHOub+GiJhdrj77lL7+K32eVoe7
iU2v7sQsvbJG8pbpj+3sU4ScP/+/1s/WeP3fULRRMTPWqL+oIn5aoyTs1/2g
s+wYmd0bfavfGl1VGbpX/Hnw6FzrVOKsNX7oD7DtsxFCvn/S/dFVa1hMatgM
hYkgSd1gnze7DXjz4uzfx4lh4+usSR0JGxxxS+1TMJaCYabDvTyqDW6uHuqj
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
8+dz
          "]]}, Annotation[#, "Charting`Private`Tag$33999#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJw1W3k0lV/UNs8zmYdruObx4pLu+55DhpRkpkTyK7NUMqRCiCLKkAyZSSIh
SgmHypAyRykypZB5jPD1rfV9f52113nO2Xuftdezn/PHlnT1szpLQ0VFJUZL
RfW/68nTY/N7ew7IdRK05+MPid+FTy7z/HVAPYyTp2JMy4iu/QNrxE0HxKM3
rSX9t5LoYfLh75FFB8TPOsbXzVtP9Fd5wZI26oDeWyz7knd7ibF/bsuqNzkg
f1beqBAVKtmXibrOLhEOiPcArHt/1F6Wv/nOR0TngIJvg7G9y4xyJviX0FOr
dqjBKzp39lWEvJD5BiPrui1SCP25FjE6qiB/6frrZ39tUFUGVfelXZJSec3D
g3rz1qiwqKB5mpKt/Ck2N//jkhVyNk56S5U2q+J/RbsfH7VE4Sb/BUy9s1Az
jyBrPOmzQJkhCl5djI/UU/YLfrCoOobOoLt5ETsTGpeL/gzRJB9Fgd8t6Rv5
tDRzdaPSO+8fQbpyM6btdu5aBptT5SkPTRHxnaVz4ss72r3zYZ78cSbo1mvv
CtGlFnIhW3NfZbIROlR2PHldakLnv9N6E0wXDyLFJbvMe4vs+7PGY01PnNBH
UoT7Y4Zxcnqa/MyNsR9xlPy39ctOucwBpk8e2p8T9VAcseVqiqkiBc9q1GWJ
0EPX2odsfIZVKf5n+SmUi3oo9cUVFipxEmVk7Y1BrpUeyppNMrVZ06U845ew
8ODVQ6dE9EgnC00ozg6fvDZT9qMBD7Yxeu6zlOqv+rmCabookCan+qJ+LmWm
IK3g8E1dtJa1lUi9l0+R8Fl4eDVYF7X0/Vld03hIif374Mmogy5ajzBVAqbl
lMa3KxU8prqolcu76uTTSsrq7cPVhvt1kVJymHTkw2rKKbHNV4+EdJGfhyz/
Y5nXlPdPiprYtnTQ3qG4+5aKbyhauHXb+SEd1Mycoi7G/57ixfC4I/+9DiIk
1OVZ+XZScjqpuvpf6aBSi/uXd+t7KP2p9r0MpTpo/pf8Nd6KfgrLqfJPupk6
6Ludm7Kz+GcKlKP/4hWng7IyxikKYt8oAQuO3x5c0UEix9jd6VxHKY9fVH3v
9P6HT4lvUBeYoIyGMU9QndRBL0zmL9PgU5R9h1ymSGY6qI3nYOnKr2nKYa4X
02coOujCt+m6YJV5Svhn9rlUZR20UurDjyUtUWpyzyy2ieog/FfTh/MBq5QZ
j7qVLTYddH3kTbh4zwaFoMGzobxDRpoacTP1tdsU2z8eW85zZNS3EnbxoiQV
FtvUuHN3mIx2bmQzTrylwdAtfuo3H8nI9M7tkrFP9NiapS/dWj0ZifR5VbO6
MWOKwm8Z5crJiIXwc/XDLXbMZVyY9Xg2GfnaCUR5KHNjR09mzurGk5Gx2vfA
vzp8mN6AyAfBq2QkNG1amf5BAJO1eFC26UVGMo7H+CRoRDHe96Lxn4+T0ZCY
3qphCAGjMszyrT1ERoq/vu7ZuEpjv+vFzNN0yOiOzQgx5IMs9kUnWzVYlox8
dH+HUboUsZZKcU6HfWRUViV0n/qGGvZMKWdBh+6fv7GLpBPRJCy3SKJbYEUb
/Q140mL4ThuLl8it2BjTRtsTevoXU/ZjIemExMFubTTjvx1RyYZj7rx5F140
aqMnd3873CjSx2ziJa3ul2sj2T3Bqle1hhhkzCcFZWkjznuhyQPWhzCV61K8
9re10fcI7ClfghkmvJ2/Qr7yzx+1U8qxJguMIUC6n99LG73zU7yZ+cgaW5kv
qF530EY6uWKnr3LaY6MeMvcGTLQRB8OyYy6rI/ZxvDDgOVkbPU9VZXN8fgp7
dZJol0rURp2+N4/kprpixQNF5EA+bfQiKH+/b/tZLMVCVsCOVhv5XBKdfh3j
iV1//3BDe1kLbYQuQP5pX+ycodznfWNa6LVvUWBg1AXsRENx7VqXFtKm1b1d
EHkJM9GVT//UoIV+rWbwNNIFY1pVjy7XPNFCQt3vT98Ru4oRlBVO3Hughc4y
sJ+o8w/H2B+W6AXEaaFGQVpADyOxLQlFEdsQLcTS5pg3FhWN/Ux/vK3lqYVu
dgi6n7GLxfp5lb7xOWghK8u5JwsdCRiKL329aqyFip7eeOlMlYQ9YVTO6tf+
Z8tdKwUs97CM62XXqmW0EPG64h5rahoWva3snMKrhSLX1Tn2v3yA+Qc8wS/R
aCFlqxsBzi25mMuCioTNkib6wpt9uSu1ADvqWb6nOaqJto8LVXaNPMT0JlRH
ebs0kRmtLfpb+RiTc3qKVuo1UWVuzlEpuacY36BaXl+ZJtoa6Zd2Vq7CqC0r
rj/L1ERc/dUjLaQabP69umtyrCaq53SrL66txYYMKw38L2siQ+VY9vre11hr
g4a0tYcmutl5ZzXuA8KqdatoNe010fSR/TW9yW+w3CrSJI+xJorpM71+tqsF
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
nd/hzG0H+Gh/cV2lyBPi/81vwP+f3/gfIkQfVQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$33999#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"c2n\"", TraditionalForm], None}, {
        FormBox["\"n\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Fig.1 \
\\!\\(\\*StyleBox[\\\"p\\\",FontWeight->\\\"Plain\\\"]\\)\\!\\(\\*StyleBox[\\\
\"=\\\",FontWeight->\\\"Plain\\\"]\\)\\!\\(\\*StyleBox[\\\"(\\\",FontWeight->\
\\\"Plain\\\"]\\)\\!\\(\\*StyleBox[\\\"m\\\",FontWeight->\\\"Plain\\\"]\\)\\!\
\\(\\*StyleBox[\\\"/\\\",FontWeight->\\\"Plain\\\"]\\)\\!\\(\\*StyleBox[\\\"5\
\\\",FontWeight->\\\"Plain\\\"]\\)\\!\\(\\*StyleBox[\\\",\\\",FontWeight->\\\"\
Plain\\\"]\\)\\!\\(\\*StyleBox[\\\"m\\\",FontWeight->\\\"Plain\\\"]\\)\\!\\(\\\
*StyleBox[\\\"/\\\",FontWeight->\\\"Plain\\\"]\\)\\!\\(\\*StyleBox[\\\"5\\\",\
FontWeight->\\\"Plain\\\"]\\)\\!\\(\\*StyleBox[\\\",\\\",FontWeight->\\\"\
Plain\\\"]\\)\\!\\(\\*StyleBox[\\\"0\\\",FontWeight->\\\"Plain\\\"]\\)\\!\\(\\\
*StyleBox[\\\")\\\",FontWeight->\\\"Plain\\\"]\\)\"", TraditionalForm], 
     PlotRange -> {{-99.99999591836735, 99.99999591836735}, {0, 16}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Volkov\"", "\"Analytical\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.874870083392655*^9, 3.874870153941863*^9}, {
   3.8748702191596603`*^9, 3.874870242434084*^9}, {3.8748704048988*^9, 
   3.8748704341554823`*^9}, {3.8748704748497543`*^9, 3.87487050790866*^9}, 
   3.874870610423337*^9, {3.8748706406325502`*^9, 3.87487070371809*^9}, 
   3.8748707534842157`*^9, 3.876247720839655*^9, {3.8762477749891167`*^9, 
   3.876247784432424*^9}, {3.8762478633252687`*^9, 3.876247900203776*^9}, {
   3.876247991867757*^9, 3.876248001877734*^9}, {3.876248246482662*^9, 
   3.876248281545794*^9}, 3.8762483138305807`*^9, {3.8762483685636463`*^9, 
   3.876248386170553*^9}, 3.8762484609961452`*^9, {3.8762485280727873`*^9, 
   3.876248538220153*^9}, 3.8762485721144238`*^9, {3.87624861089052*^9, 
   3.8762486251263847`*^9}, 3.8762490981247377`*^9, {3.876249134187151*^9, 
   3.8762492485127573`*^9}, {3.876249279427846*^9, 3.876249322807507*^9}, {
   3.8762494961124907`*^9, 3.876249499009403*^9}},
 CellLabel->
  "Out[1618]=",ExpressionUUID->"b1711832-836b-460c-9a78-a254be550d20"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Figure 2", "Chapter",
 CellChangeTimes->{{3.8748707185976973`*^9, 3.874870726075122*^9}, {
  3.8762493136200857`*^9, 
  3.8762493207684383`*^9}},ExpressionUUID->"1d8b914d-f6a3-4d6c-98bb-\
8a54413280b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"figure", " ", "2"}], ":"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "ea", ",", "m", ",", "p0", ",", "pprp", ",", "p", ",", "\[Xi]", ",", 
     "mph", ",", "\[Nu]", ",", "nstar", ",", "pdot\[Epsilon]", ",", "kdotp", 
     ",", "nstar", ",", "nstarV", ",", "\[Nu]", ",", "\[Nu]V", ",", 
     "\[Delta]", ",", "\[CapitalOmega]"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"\"\<definitions\>\"", " ", "equation", " ", "52"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Delta]", "=", 
     FractionBox[
      RowBox[{
       RowBox[{"\[Sqrt]", "2"}], " ", "ea", " ", "pprp"}], 
      RowBox[{
       RowBox[{"p0", "^", "2"}], "+", 
       RowBox[{"ea", "^", "2"}]}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]", "=", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"(", 
         FractionBox["ea", "p0"], ")"}], "^", "2"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"in", " ", "these", " ", "units"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ea", "=", 
     RowBox[{"20", " ", "m"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"5", "m"}], ",", 
       RowBox[{"5", "m"}], ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"0", " ", "component", " ", "in", " ", "4"}], "-", "momentum"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p0", "=", 
     RowBox[{"Refine", "[", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"Norm", "[", "p", "]"}], "^", "2"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"m", ">", "0"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"as", " ", "in", " ", "main", " ", "text"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Delta]", "=", 
     RowBox[{
      RowBox[{"\[Delta]", "/.", 
       RowBox[{"{", 
        RowBox[{"pprp", "->", 
         RowBox[{"Norm", "[", "p", "]"}]}], "}"}]}], "//", "N"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]", "=", 
     RowBox[{"\[CapitalOmega]", "//", "N"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Xi]", "=", "20"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mph", "=", 
     RowBox[{"m", "/", "10"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kdotp", "=", 
     RowBox[{"p0", " ", "mph"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"equation", " ", "51"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pdot\[Epsilon]", "=", 
     RowBox[{
      RowBox[{
       FractionBox["pprp", 
        RowBox[{"\[Sqrt]", "2"}]], "/.", 
       RowBox[{"{", 
        RowBox[{"pprp", "->", 
         RowBox[{"Norm", "[", "p", "]"}]}], "}"}]}], "//", "N"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"eq", " ", "34"}], ":", " ", 
     RowBox[{"new", " ", "analytical", " ", "solution"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nstar", "=", 
     RowBox[{
      FractionBox[
       RowBox[{"ea", " ", "pdot\[Epsilon]"}], 
       RowBox[{"\[CapitalOmega]", " ", "kdotp"}]], "//", "N"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Nu]", "=", 
     RowBox[{
      RowBox[{
       FractionBox["kdotp", 
        SuperscriptBox["mph", "2"]], 
       RowBox[{"(", 
        RowBox[{"\[CapitalOmega]", "-", "1"}], ")"}]}], "//", "N"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nstarV", "=", 
     RowBox[{
      FractionBox[
       RowBox[{"ea", " ", "pdot\[Epsilon]"}], "kdotp"], "//", "N"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Nu]V", "=", 
     RowBox[{
      FractionBox[
       SuperscriptBox["ea", "2"], 
       RowBox[{"2", "kdotp"}]], "//", "N"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", "\"\<parameters for figure 2:\>\"", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<\[Delta]=\>\"", ",", "\[Delta]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<\[CapitalOmega]=\>\"", ",", "\[CapitalOmega]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<\[Nu]=\>\"", ",", "\[Nu]"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<\[Nu]V=\>\"", ",", "\[Nu]V"}], "]"}], "\[IndentingNewLine]", 
   
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"3.7", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]], 
        SuperscriptBox["10", "5"], 
        RowBox[{"Abs", "[", 
         RowBox[{"BesselJ", "[", 
          RowBox[{
           RowBox[{"n", "//", "Abs"}], ",", 
           RowBox[{"2", "nstarV"}]}], "]"}], "]"}]}], ",", 
       RowBox[{"2.1", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]], 
        SuperscriptBox["10", "5"], 
        RowBox[{"Abs", "[", 
         RowBox[{"BesselJ", "[", 
          RowBox[{
           RowBox[{"n", "//", "Abs"}], ",", 
           RowBox[{"2", "nstar"}]}], "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{"-", "300"}], ",", "300"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "4"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<n\>\"", ",", "\"\<c2n\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Red"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Volkov\>\"", ",", "\"\<Analytical\>\""}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Fig.2 \!\(\*StyleBox[\"p\",FontWeight->\"Plain\"]\)\!\(\*StyleBox[\
\"=\",FontWeight->\"Plain\"]\)\!\(\*StyleBox[\"(\",FontWeight->\"Plain\"]\)\!\
\(\*StyleBox[\"5\",FontWeight->\"Plain\"]\)\!\(\*StyleBox[\"m\",FontWeight->\"\
Plain\"]\)\!\(\*StyleBox[\",\",FontWeight->\"Plain\"]\)\!\(\*StyleBox[\"5\",\
FontWeight->\"Plain\"]\)\!\(\*StyleBox[\"m\",FontWeight->\"Plain\"]\)\!\(\*\
StyleBox[\",\",FontWeight->\"Plain\"]\)\!\(\*StyleBox[\"0\",FontWeight->\"\
Plain\"]\)\!\(\*StyleBox[\")\",FontWeight->\"Plain\"]\)\>\""}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.876248614623267*^9, 3.8762487045683727`*^9}, {
  3.876248768103025*^9, 3.876248824820092*^9}, {3.876249305203636*^9, 
  3.8762493085649033`*^9}, {3.8762493526510143`*^9, 3.87624947913561*^9}},
 CellLabel->
  "In[1550]:=",ExpressionUUID->"c7431770-67bd-4b23-8c5e-cceccabf9951"],

Cell[CellGroupData[{

Cell[BoxData["\<\"parameters for figure 2:\"\>"], "Print",
 CellChangeTimes->{{3.876248627799967*^9, 3.8762487049687033`*^9}, 
   3.876248782915553*^9, 3.8762488251243753`*^9, 3.876249325587111*^9, {
   3.876249368406767*^9, 3.8762494499805813`*^9}, 3.87624948273302*^9},
 CellLabel->
  "During evaluation of \
In[1550]:=",ExpressionUUID->"80a4a105-9e17-4356-b03f-0cb519cb1d24"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[Delta]=\"\>", "\[InvisibleSpace]", "0.4434589800443459`"}],
  SequenceForm["\[Delta]=", 0.4434589800443459],
  Editable->False]], "Print",
 CellChangeTimes->{{3.876248627799967*^9, 3.8762487049687033`*^9}, 
   3.876248782915553*^9, 3.8762488251243753`*^9, 3.876249325587111*^9, {
   3.876249368406767*^9, 3.8762494499805813`*^9}, 3.876249482737603*^9},
 CellLabel->
  "During evaluation of \
In[1550]:=",ExpressionUUID->"e9966e08-4a6e-488f-bcec-36ad61bcac12"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[CapitalOmega]=\"\>", "\[InvisibleSpace]", 
   "2.9737412891678994`"}],
  SequenceForm["\[CapitalOmega]=", 2.9737412891678994`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.876248627799967*^9, 3.8762487049687033`*^9}, 
   3.876248782915553*^9, 3.8762488251243753`*^9, 3.876249325587111*^9, {
   3.876249368406767*^9, 3.8762494499805813`*^9}, 3.876249482742931*^9},
 CellLabel->
  "During evaluation of \
In[1550]:=",ExpressionUUID->"df0eeb8a-b219-463e-b0a8-17abb21fde8a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[Nu]=\"\>", "\[InvisibleSpace]", "140.9533215305245`"}],
  SequenceForm["\[Nu]=", 140.9533215305245],
  Editable->False]], "Print",
 CellChangeTimes->{{3.876248627799967*^9, 3.8762487049687033`*^9}, 
   3.876248782915553*^9, 3.8762488251243753`*^9, 3.876249325587111*^9, {
   3.876249368406767*^9, 3.8762494499805813`*^9}, 3.876249482746379*^9},
 CellLabel->
  "During evaluation of \
In[1550]:=",ExpressionUUID->"66242d59-e7e1-49ea-a965-c6f8170dcb41"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[Nu]V=\"\>", "\[InvisibleSpace]", "280.0560168056019`"}],
  SequenceForm["\[Nu]V=", 280.0560168056019],
  Editable->False]], "Print",
 CellChangeTimes->{{3.876248627799967*^9, 3.8762487049687033`*^9}, 
   3.876248782915553*^9, 3.8762488251243753`*^9, 3.876249325587111*^9, {
   3.876249368406767*^9, 3.8762494499805813`*^9}, 3.8762494827502813`*^9},
 CellLabel->
  "During evaluation of \
In[1550]:=",ExpressionUUID->"6e88fb5b-e1f7-4deb-908a-8f7e0a65b471"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
4qoRTS4k1gaiwnWsEtMWOGFpT8Ch8Qk4SH78ZL7NArdHZa4tMywDT8dZibIP
Fvipf8qfetMNYC+E0uuZFvhsGb13bwcJdt7m0jeOtsCPxS+UNfhTgNZ7/AfL
WQss2JfcxDdJBpJ6uXsHwQLHpeVYPXLdhBWOe3/TNS0wJ+/qi7bpVZidOnLp
mJAFzjJpmTs3OgfjVQq00kwWeDFob3hEyCAMpO9IWJ4zx3GltuO9THfh96Wu
/Z86zPHXG+pH7Cf7oc06/7+ICnOcFER67a82Bw3i11TMn5vjMx2epzv+W4Wq
fzbfOGLNcQ/ff7q5MptQ0X3IpjvQHLdrz95RaCdDafFqT5azOR4VaNVypK53
4d26U6d0zXFv6V0/rSES5B57sionao6DhI81urpsQJZOQMT6bnOs8De3P5hj
GdL2IravS2a45aF2asbgBCTPc6VHd5vhP5/sw148bYW7deMS1pVm+OlMxqWj
uS1wK7u8dE+uGbbyCE6VzZ+Aa2H39PvizPAGLC3kkJcgmODV8uKiGfZbYl0c
MN+Ac9KKHmfczfC1EuUHld0kOEVPP6mkb4aDc2VZpY5RwKe/6xJJgjrfTU+t
skYyuJXl01axmeF6p0eqAvs3gZB4LSF2zRS3nn1nnBK1CpZ+tgfs+0xx8hfp
p0zVs2CkL5zH+90UF/S4eLo+7wPd/WsqQ/mmmPR9w7ks+gWordR9+y/JFH/g
7VUtLxgC+eYnNoGXTbG5kG7yTqr/SOYE9Kp5meJGYZ/LnJ5rcOgG8ts2MsUb
QobFv15twn4X7rUaaVNs5/fuvjsjBbgVJiLiuUxxxVB0BxOiAMuuj2xOmyaY
PWRspIRAAoaRe+n8QyZYsyI3W/vYOmx/8pIcqzXBwQVxUe1fqH6Rovi+oJDa
z85SXZg9Cotn6Q0uPjDBhsyu3HPs32DK+HeL1lUTzDrMHv68twtGBF550Pma
YBalYw970DT0blybbDAzwQbc8YmtMSvQ0WYbnCxvglW0al6+P0+EH/nCdG48
JviCs0vlahgZaiPXEoS2qESipbwpeoIClR71ByZHjbEz8VGunxAZylXS8942
GuOJu8K99NUbUMx6TvVysTEOUA+U/S95GV5NoCq9NGMcZzKXOTvwF15Uctsy
hhtj2TYXeemIn5CRNtH744QxZuWMv9Ki1AwPzn/0S7Uyxm3Edy9ybScg3iJu
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
4hLma0HAzrVzZr2Eht+FTYXP2d+E/wFaPFOK
          "]]}, 
        Annotation[#, "Charting`Private`Tag$33495#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJxMd3c41+8Xty17JlGIkpG9x+dzbnvvvVcikVVWqZBRSUhFUhQlpZAKhRtF
Q7JCKCt7783jua7n+v6e9z/v63Wd+9znPvc45/U64u5v7klGQkJykIqE5P/+
KWmEF3ergzDJ//uE2D/LMVb+D+vzuoUdqvgfTpLL2FYs/R/mcKfZF5T///l/
GD/0L/n/8/cr0P7i9j+c3CJ6P5n8f7h0hv+RjkLgfzglYl0rISzgP6woXnuf
4YL/fziKOcLTZtjvP6zSPBdc6uP7Hz6uZEp0bvb5DwfUtXyNIZz+D4uIsmZ8
/Oz1v/WrqhxVFz/1Hz4nIrDYXXwS/9KtlhJn/KEsriwWM6vqgQ93n/5AZbip
wkrptC9L3gNn7dI13xwiUV35mXhTX9IDv9uxrLP+R6Fa6Tl1L0/AAzPYqVPZ
zDGpGqa8eOlA64HDH3Twjd7lVz09JtzR0OmO3wSX+zH90FXNvSsonB3kjmXL
eidE36epJrhZvzLydceumg74qlOGqu+JOJlNT3eswRxqbUP/SFWmdphgbeeO
hXWL+0xVn6ly3NxfR27hjudD73ldPf1SdcNGS7fY0B0jO53uIKdi1drpXHN6
5I7PliQvn5ksV31a1t5ZruSOQ4fk1qOfVqtei6Fw8pJxx9Hun4O1zOpUfY1l
B9nF3LEzj1N7eGqDqunBk161gu64uYcjmrymUVX23+0pfz53zHDTgpw8oUWV
83Vd4GEud/x952LSJ+dfqlvhiyvf2Nxxp3VGgRttt2qfpsDFMAZ3nH3kgYF/
WZ9qLZMFqSC1O26w/dTHZjqk+rQ7Oq6NxB0XeuBTCtGjqtfzSuiiNtxwfqej
EF/mlOrZgMFk8SU3zMjYWTXqOa9qrsLK0TvthmWSH5g1HF9WlaNSz7w26oY1
f6suUL9fV+VsCeRTGHDDiz6r93eJu6pbmTl5/7rd8IJE6wmqDTJC/6kWkdR2
N7y8YLz5npaa8EmKtAia3LBT0TBL/SodIX9LUm66wQ1vGsxn564yE240uFbc
r3HDI9St4/5p7ISzqcmg+8ENrztlivxc5CSYO+FPy6VuWIr85xFpIg9BXmhO
78krN+zi4b5fxJyfwLXI+9M03w37TtqTnZcUJJwrd87xeeyG7/bSTq/FihB+
XM4KvvrADSc9m+DJLJYgCGr3aj2864bd0tU+sc9IE67Qc3OWJbvhh+K37Zgy
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
bXAkE23H+DQ5alD/EK9LsMETlxqIVZcpUMUhoL0tZYPp6w72cjNQouxmbSYh
LhvM8Xd+lvMAFeqdfb56jsEGvzp3c5zsARU6yMTQX0OyN952/FroAWpkLR7w
hXHJGr+ScWPXTKBGqUZtRQ6j1vgg6S01yWlq1OQrn5HfbY3rgFKbRGsfokvM
iFr+YY0PX4xmCU3ah3RfbJ1Wr7HGRWps9bZf9qGr31zMb5VaY4m2P55+8/sQ
Hq9V7n1mjR37Et7G7KNB2/sEBYQzrTFvj6XpOXoapCx0jS4kyRozM3FOHN3a
h0J0phZro6zxoptdxY2OfajklEkv03lrLF/VQPvm/j40G1vyydHbGg+vaA1+
1NmHTuTtL3zuYI3lXMs+jfRSI+9PYXdWjK1xtNzbSzftqFHuUE+khro1ZpKW
WJSspEIDZHAqWc4a7zwV7w+lpkI8/I+N/whZY1uft0kyipTIXo1SQeSQNdZQ
IXPzMKFAd129eUOZrHFxxR0pRSNy1Hb5O/UnMmtcWfLk3AFpMmRYldLlNG6F
f0fcvq7ltQsJf5ZwQa8VVt16WRGQuwWft2yer/60wuEnkpSc368DUYUnIuWd
FaanYu44d2YRIuyj3P8+t8KlzyK/mrPPwfvwf/qiWVZYMelyTanmOCyl68iE
JVthC3hoJSU3CJJlBdyfY6zw7RnFnwq0HeDbyUDBGmqFc3LvRAaSVcHzlYAp
Z5+98Rc/6L06+RFG9re3v3CywipfpHaD838Bv5xC5ZqpFaapoLF7uW8QnC3v
52lpWmG+9ljmCO5xyAzevpmqYIVPTzakN23PAntJnfMJHiusT6VRbhqxAqYt
gjrhLFb4F+XAfe/z63Bz7ppEPYUVVvKfH+FR3oJvTNMH2NYscfGE84p0zQ5Q
SZiSuE5a4p47lrqdUSRI3fjN2Mu/ljjZLm/nUiQpuuzH0bLeYoljuK8oXjUl
Qx8Tw8u1P1viAq1hjaNrZGjtRW/O7TJLfE91XHkhkBzJfofr/S8s8Wvf918H
P5CjwInHQWKPLPGdhqZAm3Zy9IqGyiEi1RJ3ZClzCleQowmh0xoNsZb44JrR
i2JfciSo2yjKHm6J7SrHXrRPkiEPLwl2N989+0z2KSpFMpQdl7pV6GKJBZdc
C8zMSVFv3vK/DXNLnNkn1+igSoI4P9v+0NG2xDetPO7+mNsGq38f3qYpWWKh
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
+2a/++f/+//Cf/4fDbJNyA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$33495#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"c2n\"", TraditionalForm], None}, {
        FormBox["\"n\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Fig.2 \
\\!\\(\\*StyleBox[\\\"p\\\",FontWeight->\\\"Plain\\\"]\\)\\!\\(\\*StyleBox[\\\
\"=\\\",FontWeight->\\\"Plain\\\"]\\)\\!\\(\\*StyleBox[\\\"(\\\",FontWeight->\
\\\"Plain\\\"]\\)\\!\\(\\*StyleBox[\\\"5\\\",FontWeight->\\\"Plain\\\"]\\)\\!\
\\(\\*StyleBox[\\\"m\\\",FontWeight->\\\"Plain\\\"]\\)\\!\\(\\*StyleBox[\\\",\
\\\",FontWeight->\\\"Plain\\\"]\\)\\!\\(\\*StyleBox[\\\"5\\\",FontWeight->\\\"\
Plain\\\"]\\)\\!\\(\\*StyleBox[\\\"m\\\",FontWeight->\\\"Plain\\\"]\\)\\!\\(\\\
*StyleBox[\\\",\\\",FontWeight->\\\"Plain\\\"]\\)\\!\\(\\*StyleBox[\\\"0\\\",\
FontWeight->\\\"Plain\\\"]\\)\\!\\(\\*StyleBox[\\\")\\\",FontWeight->\\\"\
Plain\\\"]\\)\"", TraditionalForm], 
     PlotRange -> {{-299.99998775510204`, 299.99998775510204`}, {0, 4}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Volkov\"", "\"Analytical\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.876248627793852*^9, 3.8762487049642897`*^9}, 
   3.8762487829108753`*^9, 3.876248825117639*^9, 3.876249327608388*^9, {
   3.876249370570365*^9, 3.876249452043687*^9}, 3.876249484810988*^9},
 CellLabel->
  "Out[1572]=",ExpressionUUID->"af41e42b-7d91-4ee6-948d-38a2107809e8"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{586, 766},
WindowMargins->{{Automatic, 171}, {Automatic, 2}},
FrontEndVersion->"12.3 for Mac OS X x86 (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"bc20f011-d081-4ce8-9ab5-0c079e2befaf"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 583, 10, 259, "Text",ExpressionUUID->"55e7c0d2-771b-487e-943e-70df46dc454b"],
Cell[1144, 32, 1253, 30, 178, "Text",ExpressionUUID->"640d3a68-01eb-405c-b45c-c4624dd81db0"],
Cell[2400, 64, 691, 15, 112, "Text",ExpressionUUID->"486412fd-4633-4573-b53c-743b53529cc1"],
Cell[CellGroupData[{
Cell[3116, 83, 183, 3, 117, "Chapter",ExpressionUUID->"67782eca-2649-4cb9-a147-8278ee41f1b5"],
Cell[CellGroupData[{
Cell[3324, 90, 1486, 42, 111, "Input",ExpressionUUID->"e49482c9-9e97-43b0-8aa3-27dbbc67f06f"],
Cell[4813, 134, 588, 14, 49, "Output",ExpressionUUID->"e7f5d1c7-2cc8-43c2-98bd-afd7fa5aad56"],
Cell[5404, 150, 1511, 39, 107, "Output",ExpressionUUID->"ac874954-7d1c-4fcb-b7bd-462c3bcd49a6"]
}, Open  ]],
Cell[6930, 192, 188, 4, 30, "Input",ExpressionUUID->"cb3be649-c5e3-4e8a-a4aa-7287cdf3d7e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7155, 201, 248, 4, 117, "Chapter",ExpressionUUID->"6cd3b410-3e13-4b25-9954-2ba6286f8b0c"],
Cell[CellGroupData[{
Cell[7428, 209, 897, 26, 100, "Input",ExpressionUUID->"931f638c-614e-4882-842c-76a6c4ea4bfb"],
Cell[8328, 237, 744, 22, 52, "Output",ExpressionUUID->"f94222fc-5870-4b63-ba55-4077a2ce65f3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9121, 265, 281, 4, 117, "Chapter",ExpressionUUID->"6cff8367-c49d-4468-970b-89b48e6e5488"],
Cell[CellGroupData[{
Cell[9427, 273, 1936, 56, 199, "Input",ExpressionUUID->"5b921f0a-a783-44b3-af18-cfa270fbeb9d"],
Cell[11366, 331, 2328, 55, 251, "Output",ExpressionUUID->"0a606e66-48a3-4057-998f-586a78818637"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13731, 391, 3066, 81, 382, "Input",ExpressionUUID->"2993855a-a488-4b16-8d7a-d3a12c2806f5"],
Cell[16800, 474, 20648, 417, 251, "Output",ExpressionUUID->"0ecdf007-82d7-4354-9690-d69fa3ec911a"],
Cell[37451, 893, 15725, 325, 260, "Output",ExpressionUUID->"ac277464-4635-478d-a9be-c9dda53fd231"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[53225, 1224, 327, 5, 69, "Chapter",ExpressionUUID->"16a30def-1239-4ba4-9778-7ae4ad622c92"],
Cell[CellGroupData[{
Cell[53577, 1233, 561, 15, 69, "Input",ExpressionUUID->"24fbc382-700c-48ed-af9a-553e870a9107"],
Cell[54141, 1250, 554, 16, 54, "Output",ExpressionUUID->"2212ff86-0caa-46fa-8a8e-d3d348a62904"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[54744, 1272, 377, 6, 69, "Chapter",ExpressionUUID->"624aae71-5406-4559-9143-d09cddc6787e"],
Cell[CellGroupData[{
Cell[55146, 1282, 437, 11, 52, "Input",ExpressionUUID->"bc5d7c33-78fa-4424-b866-cb355644dc0f"],
Cell[55586, 1295, 722, 22, 59, "Output",ExpressionUUID->"0e466c47-25e1-4347-b279-d892c1833285"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[56357, 1323, 208, 4, 69, "Chapter",ExpressionUUID->"3d1e69db-6d9c-4552-a1a6-3643745dd5e3"],
Cell[CellGroupData[{
Cell[56590, 1331, 7965, 210, 997, "Input",ExpressionUUID->"205a7499-384d-404e-89ff-0a8a35eb715a"],
Cell[CellGroupData[{
Cell[64580, 1545, 626, 10, 24, "Print",ExpressionUUID->"17210918-2b8b-4114-ab06-12bcd3d03e7b"],
Cell[65209, 1557, 759, 14, 24, "Print",ExpressionUUID->"bd6f3517-4b8e-40e4-b7de-e2895694f849"],
Cell[65971, 1573, 778, 15, 24, "Print",ExpressionUUID->"00ad2263-8500-40c0-a6d1-6bb411c28483"],
Cell[66752, 1590, 751, 14, 24, "Print",ExpressionUUID->"5c039afa-31b0-4fd2-98b8-a4744583442d"],
Cell[67506, 1606, 751, 14, 24, "Print",ExpressionUUID->"1c5796da-e4da-4a8b-81b3-3252fd6cdde8"]
}, Open  ]],
Cell[68272, 1623, 82418, 1407, 272, "Output",ExpressionUUID->"b1711832-836b-460c-9a78-a254be550d20"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[150739, 3036, 208, 4, 69, "Chapter",ExpressionUUID->"1d8b914d-f6a3-4d6c-98bb-8a54413280b6"],
Cell[CellGroupData[{
Cell[150972, 3044, 7124, 196, 997, "Input",ExpressionUUID->"c7431770-67bd-4b23-8c5e-cceccabf9951"],
Cell[CellGroupData[{
Cell[158121, 3244, 378, 6, 24, "Print",ExpressionUUID->"80a4a105-9e17-4356-b03f-0cb519cb1d24"],
Cell[158502, 3252, 510, 10, 24, "Print",ExpressionUUID->"e9966e08-4a6e-488f-bcec-36ad61bcac12"],
Cell[159015, 3264, 529, 11, 24, "Print",ExpressionUUID->"df0eeb8a-b219-463e-b0a8-17abb21fde8a"],
Cell[159547, 3277, 502, 10, 24, "Print",ExpressionUUID->"66242d59-e7e1-49ea-a965-c6f8170dcb41"],
Cell[160052, 3289, 506, 10, 24, "Print",ExpressionUUID->"6e88fb5b-e1f7-4deb-908a-8f7e0a65b471"]
}, Open  ]],
Cell[160573, 3302, 107650, 1824, 281, "Output",ExpressionUUID->"af41e42b-7d91-4ee6-948d-38a2107809e8"]
}, Open  ]]
}, Open  ]]
}
]
*)

